name: Deploy to production

on:
  push:
    branches: [ master ]

jobs:
#should be gtg
  deploy:
    permissions:
      id-token: write #requesting the JWT
      contents: read #required for actions/checkout

    name: Build image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.1'
        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Load secrets and save to app.env
        run: aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: simplebank
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
          docker push -a $REGISTRY/$REPOSITORY

      - name: Update kube config
        run: aws eks update-kubeconfig --name simple-bank --region us-west-2

      - name: Deploy image to Amazon EKS
        run: | 
          kubectl apply -f eks/aws-auth.yml
          kubectl apply -f eks/deployment.yml
          kubectl apply -f eks/service.yml
          kubectl apply -f eks/issuer.yml
          kubectl apply -f eks/ingress.yml
#derp